#!/bin/bash

# Created by JohnTheCoolingFan
# Distributed under the terms of the GNU General Public License v3

# This script takes an autogenerated ebuild made using `pycargoebuild` or `cargo ebuild` and adds necessary stuff

INPUT_FILE=$1
NEW_VERSION=$(basename $INPUT_FILE | sed -e 's/.*\([[:digit:]]\+\.[[:digit:]]\+\.[[:digit:]]\+\).ebuild/\1/')
PACKAGE_NAME="an-anime-game-launcher"
OUT_FILE="$PACKAGE_NAME-$NEW_VERSION.ebuild"

if [[ -e $OUT_FILE ]]; then
    echo "File $OUT_FILE already exists, quitting"
    exit 1
fi

echo "Updating as $OUT_FILE"

# Copy the generated file to the right location under teh right name
cp $INPUT_FILE $OUT_FILE

echo "Copyright and auto-generated notices"

# Edit copyright notices
sed -i 's/Copyright 2024 Gentoo Authors/Copyright 2023-2024 Pascal Jager/' $OUT_FILE
sed -i 's/\(Distributed under the terms of the GNU General Public License\) v2/\1 v3/' $OUT_FILE

# Append notice of auto-processing
sed -i -e '/\# Autogenerated by \(pycargoebuild\|cargo-ebuild\) [[:digit:]]\+\.[[:digit:]]\+\.[[:digit:]]\+/a \# Processed using a script by JohnTheCoolingFan' $OUT_FILE

echo "Dependencies"

# Add dependencies
sed -i '/declare -A GIT_CRATES=(/i \
DEPEND="\
	>=gui-libs\/libadwaita-1.4:1\
	app-arch\/tar\
	app-arch\/unzip\
	app-arch\/p7zip\
	app-arch\/cabextract\
	dev-vcs\/git\
	net-misc\/curl\
	>=gui-libs\/gtk-4:4\
	net-misc\/iputils\
	virtual\/libc\
	sys-auth\/polkit\
\
	app-arch\/xz-utils\
	dev-libs\/glib:2\
	x11-libs\/cairo\
	x11-libs\/pango\
"\
' $OUT_FILE

echo "Ebuild inherits"

# Add inherits
sed -i 's/inherit cargo/& xdg-utils desktop/' $OUT_FILE

echo "RDEPEND and BDEPEND"

# Add RDEPEND and BDEPEND
sed -i '/inherit cargo xdg-utils desktop/i \
RDEPEND="\
	\${DEPEND}\
"\
\
BDEPEND=">=virtual\/rust-1.63\
"\
' $OUT_FILE

echo "Description"

# Update description
sed -i 's/DESCRIPTION="Anime Game launcher"/DESCRIPTION="Anime Game launcher with automatic anti-cheat patching"/' $OUT_FILE

echo "SRC_URI"

# Update SRC_URI
sed -i '/SRC_URI="/a \\thttps://github.com/an-anime-team/an-anime-game-launcher/archive/${PV}.tar.gz -> ${P}.tar.gz' $OUT_FILE

echo "RESTRICT and QA_FLAGS_IGNORED"

# Add RESTRICT
printf 'RESTRICT="mirror"\n\n' >> $OUT_FILE

# Add QA_FLAGS_IGNORED
printf 'QA_FLAGS_IGNORED="usr/bin/an-anime-game-launcher"\n\n' >> $OUT_FILE

echo "src_prepare"

# Add src_prepare
cat >> $OUT_FILE << EOF
src_prepare() {
	default
	# patch the .desktop file to work in non-AppImage environment
	sed -i 's/Icon=icon/Icon=moe.launcher.an-anime-game-launcher/' assets/anime-game-launcher.desktop || die
	sed -i 's/Exec=AppRun/Exec=anime-game-launcher/' assets/anime-game-launcher.desktop || die
	# avoid stripping by the build system, we do that ourselves in Gentoo
	sed -i 's/strip = true/strip = false/' Cargo.toml || die
}

EOF

echo "src_install"

# Add src_install
cat >> $OUT_FILE << EOF
src_install() {
	cargo_src_install
	domenu assets/anime-game-launcher.desktop
	newicon assets/images/icon.png moe.launcher.an-anime-game-launcher.png
}

EOF

echo "pkg_postinst and pkg_postrm"

# Add pkg_postinst and pkg_postrm
cat >> $OUT_FILE << EOF
pkg_postinst() {
	xdg_desktop_database_update
}

pkg_postrm() {
	xdg_desktop_database_update
}
EOF
